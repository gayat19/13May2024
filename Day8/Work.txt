Login is success then we pass the username as parameter to the next component 
	- > Passing values in route as parameters

Products -> use other controls like dropdown to display data
	    Filters -> search box for searching data


Pass data between components using a hook- useContext

Redux -> How to handle data between components that are not related
store - list the objects which needs state change to be triggered from various components
slice - one for every object that need to be state monitored - initial state of the object and the methods to modify the state
provider - prove the store to all components that need to modify/read the object
dispatcher - reference to a method that will modify the state
useSelector - a hook that triggers change in display when the state of object modified by the dispatch reducer changes





---------------------------------------------------------------------
PrivateRoute.tsx
----------------------------------------------------------------
import { useEffect } from "react";
import { Navigate, Outlet, useLocation } from "react-router";

export function PrivateRoute(){
    var isLoggedIn = sessionStorage.getItem("un")?true:false;
    const location = useLocation();
    useEffect(()=>{
        if(!isLoggedIn)
            sessionStorage.setItem("route","/products")
    },[])
    return(
            isLoggedIn?<Outlet/>:<Navigate state={{from:location}} to="./login"/>
    )
}

---------------------------------------------------------------------
App.tsx
---------------------------------------------------------------------

import { BrowserRouter, Link, Outlet, Route, Routes } from 'react-router-dom';
import './App.css';
import Login from './Login/Login';
import ProductDataJson from './ProductModule/ProductDataJson';
import { Menu } from './Menu';
import Parent from './ProductModule/Parent';
import { NotFound } from './NotFound';
import { Products } from './ProductModule/Products';
import { Home } from './Home';
import { PrivateRoute } from './PrivateRoute';
import { AddProduct } from './AddProduct';
import { Welcome } from './Welcome';
import { ProductsDropDoen } from './ProductDropDown';

function App() {
  return (
    <div>
      <BrowserRouter>
      <Menu/>
      <Routes>
          <Route path='/' element={<Home/>}/>
          {/* or */}
          {/* <Route index element={<Products/>}/> */}
          <Route path='login' element={<Login/>}/>
          {/* <Route path='local' element={<ProductDataJson/>}/> */}
          <Route path='parent' element={<Parent/>}/>
          <Route path='addprod' element={<AddProduct/>}/>
          <Route path='productFilter' element={<ProductsDropDoen/>}/>
          <Route element={<PrivateRoute/>}>
              <Route path='products' element={<Products/>}/>
              <Route path='local' element={<ProductDataJson/>}/>
              <Route path='welcome/:un' element={<Welcome/>}/>
          </Route>
         
          {/* Wildcard route */}
          <Route path='*' element={<NotFound/>}/>
      </Routes>
    </BrowserRouter>
    <Outlet/>
    </div>
  );
}

export default App;

-----------------------------------------------------
Login.tsx
------------------------------------------------------
import axios from "axios";
import { useEffect, useState } from "react";
import { useLocation, useNavigate } from "react-router-dom";


export default function Login(props:any){

    const navigate = useNavigate();

    const [loginData,setLoginData] = useState({
        "username":"",
        "password":""
    })
    const [errors,setErrors] = useState();

    const validation = ()=>{
        let loginErr:any = {};
        loginErr.username = loginData.username?"":"Username cannot be empty";
        loginErr.password = loginData.password?"":"Password cannot be empty";
        loginErr.passwordLen=loginData.password?.length>3?"":"Password much be 3 chars long";
        setErrors(loginErr);
        return Object.values(loginErr).every(c=>c==="");
    }
    const handleChange=(event:any)=>{
        const {name,value} = event.target;
       setLoginData({...loginData,[name]:value})
      
    }

    const location = useLocation();
    const from = location.state?.from?.pathname || "/";

    
    const checkUser=(event:any)=>{
        var errData = validation();
        //console.log(errors);
        if(errData)
       {
            axios.post("https://dummyjson.com/auth/login",loginData)
            .then((response)=>{
                console.log(response.data)
                sessionStorage.setItem("un",loginData.username);
                navigate("/welcome/"+loginData.username);
            }).catch((err)=>{
                alert(err.response.data.message)
            })
       }
       
    }
    return(
        <div>
            <label className="form-control">Username</label>
            <input name="username" className="form-control" type="text" value={loginData.username} onChange={handleChange}/>
            {errors?["username"]?<span>{errors["username"]}</span>:null:null}
            <label className="form-control">Password</label>
            <input name="password" className="form-control" value={loginData.password} type="password" onChange={handleChange}/>
            {errors?["password"]?<span>{errors["password"]}</span>:null:null} 
            {errors?["passwordLen"]?<span>{errors["passwordLen"]}</span>:null:null}
            <button className="btn btn-success" onClick={checkUser}>Login</button>
        </div>
    )
}


-----------------------------------
ProductsDropDoen.tsx
-----------------------------------

import { useEffect, useState } from "react";
import { ProductModel } from "./ProductModule/ProductModel";


export function ProductsDropDoen(props:any){
    var [productss,setProducts] = useState([new ProductModel()])
    var [product,setProduct] = useState(new ProductModel());
    useEffect(()=>{
        fetch("https://dummyjson.com/products")
        .then(data=>data.json())
        .then((p)=>{
        setProducts(p.products);
        })
    },[])
   
    var showProduct=(event:any)=>{
        for (let index = 0; index < productss.length; index++) {
            if(productss[index].id==event.target.value)
                {
                    setProduct(productss[index])
                    break;
                }
        }
    }
    return(
        <div>
            <hr/>
            {
                (productss[0].price ==0)?
                <div className="spinner-border text-success" role="status">
                     <span className="sr-only"></span>
                </div>:
                <div>
                 <select onChange={showProduct}>
                    <option value="0">--Select a product ---</option>
                    {
                    productss.map((prod,idx)=>{
                        return(
                            <option key={idx} value={prod.id}>{prod.title}</option>
                    )
                    })
                }
                 </select>
             </div>
            }
           {
            product.title?<div>
                <h2> {product.title}</h2>
                <img src={product.thumbnail} height="100" width="100"/>
                <br/>
                Available @Rs.{product.price} also {product.stock} nos. available

        </div>:null
           }
        </div>
    );
}
-----------------------------------
Menu.tsx
-----------------------------------

import { Link } from "react-router-dom";

export function Menu(){
    return(
        <nav className="navbar navbar-expand-lg bg-body-tertiary">
            <div className="container-fluid">
                <div className="collapse navbar-collapse" id="navbarNav">
                <ul className="navbar-nav">
                    {/* <li className="nav-item">
                        <Link className="nav-link" to="/login">Login</Link>
                    </li> */}
                    <li className="nav-item">
                        <Link className="nav-link" to="/local">Local Data</Link>
                    </li>
                    <li className="nav-item">
                        <Link className="nav-link" to="/productFilter">ProductSelection</Link>
                    </li>
                    <li className="nav-item">
                        <Link className="nav-link" to="/parent">Parent</Link>
                    </li>
                    <li className="nav-item">
                        <Link className="nav-link" to="/products">Our Products</Link>
                    </li>
                    <li className="nav-item">
                        <Link className="nav-link" to="/addprod">AddProduct</Link>
                    </li>
                    
                </ul>
                </div>
            </div>
    </nav>
    )
}
-----------------------------------
Products.tsx
-----------------------------------

import { useEffect, useState } from "react";
import { ProductModel } from "./ProductModel";

export function Products(props:any){
    var [productss,setProducts] = useState([new ProductModel()])
    var [search,setSearch] = useState("")
    useEffect(()=>{
        fetch("https://dummyjson.com/products")
        .then(data=>data.json())
        .then((p)=>{
        setProducts(p.products);
        })
    },[])
   
  var buyProduct=(event:any)=>{
    props.onAddCart(event);
  }
  const searchProducts =()=>{
        console.log(search)
        setProducts(productss.filter((prod)=>prod.title.toLowerCase().includes(search.toLowerCase())))
  }
  var serchStyle = {
    width:"300px",
    backgroundColor:"blue"
  }
    return(
        <div>
           <div style={serchStyle}>
                <input type="text" value={search} className="form-control" onChange={(event)=>setSearch(event.target.value)}/>
                <button className="btn btn-success" onClick={searchProducts}>Search</button>
           </div>
            <hr/>
            {
                (productss.length ==0)?
                <div className="spinner-border text-success" role="status">
                     <span className="sr-only"></span>
                </div>:
                <div>
                    {
                        productss.map((prod,idx)=>{
                            return(
                            <div key={idx}>
                                <h2> {prod.title}</h2>
                                <img src={prod["thumbnail"]} height="100" width="100"/>
                                <br/>
                                Available  {prod["stock"]} nos. 
                                <button className="btn btn-primary" onClick={(e)=>{
                                    buyProduct(prod);
                                }}>Buy @Rs.{prod["price"]}</button>
                        </div>  
                        )
                    })
                }
                </div>
            }
        </div>
    );
}
