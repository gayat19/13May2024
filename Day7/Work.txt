Post
 fetch
 use axiom for  the API call 
 If login success then go to another component - Display a welcome message with the username
     Pass as parameter in the route
 Fine tune the login component with validations and forms

Status
100 - information
200 - success
300 - redirected
400 - client side error
500 - Server side error


Axios

---------------------------------------------------------------------
PrivateRoute.tsx
----------------------------------------------------------------
import { useEffect } from "react";
import { Navigate, Outlet, useLocation } from "react-router";

export function PrivateRoute(){
    var isLoggedIn = sessionStorage.getItem("un")?true:false;
    const location = useLocation();
    useEffect(()=>{
        if(!isLoggedIn)
            sessionStorage.setItem("route","/products")
    },[])
    return(
            isLoggedIn?<Outlet/>:<Navigate state={{from:location}} to="./login"/>
    )
}
------------------------------------------
Menu.tsx
----------------------------------------------------------------
import { Link, Outlet } from "react-router-dom";

export function Menu(){
    return(
        <nav className="navbar navbar-expand-lg bg-body-tertiary">
            <div className="container-fluid">
                <a className="navbar-brand" href="#">Navbar</a>
               
                <div className="collapse navbar-collapse" id="navbarNav">
                <ul className="navbar-nav">
                    <li className="nav-item">
                        <Link className="nav-link" to="/login">Login</Link>
                    </li>
                    <li className="nav-item">
                        <Link className="nav-link" to="/local">Local Data</Link>
                    </li>
                    
                </ul>
                </div>
            </div>
    </nav>
    )
}
---------------------------------------------------------------------
App.tsx
---------------------------------------------------------------------

import { BrowserRouter, Link, Outlet, Route, Routes } from 'react-router-dom';
import './App.css';
import Login from './Login/Login';
import ProductDataJson from './ProductModule/ProductDataJson';
import { Menu } from './Menu';
import Parent from './ProductModule/Parent';
import { NotFound } from './NotFound';
import { Products } from './ProductModule/Products';
import { Home } from './Home';
import { PrivateRoute } from './PrivateRoute';

function App() {
  return (
    <div>
      <BrowserRouter>
      <Menu/>
      <Routes>
          <Route path='/' element={<Home/>}/>
          {/* or */}
          {/* <Route index element={<Products/>}/> */}
          <Route path='login' element={<Login/>}/>
          <Route path='local' element={<ProductDataJson/>}/>
          <Route path='parent' element={<Parent/>}/>
          <Route element={<PrivateRoute/>}>
              <Route path='products' element={<Products/>}/>
          </Route>
          
          {/* Wildcard route */}
          <Route path='*' element={<NotFound/>}/>
      </Routes>
    </BrowserRouter>
    <Outlet/>
    </div>
  );
}

export default App;



-----------------------------------------------------
Login.tsx
------------------------------------------------------
import axios from "axios";
import { useEffect, useState } from "react";
import { useLocation, useNavigate } from "react-router-dom";


export default function Login(props:any){

    const navigate = useNavigate();

    const [loginData,setLoginData] = useState({
        "username":"",
        "password":""
    })
    const [errors,setErrors] = useState();

    const validation = ()=>{
        let loginErr:any = {};
        loginErr.username = loginData.username?"":"Username cannot be empty";
        loginErr.password = loginData.password?"":"Password cannot be empty";
        loginErr.passwordLen=loginData.password?.length>3?"":"Password much be 3 chars long";
        setErrors(loginErr);
        return Object.values(loginErr).every(c=>c==="");
    }
    const handleChange=(event:any)=>{
        const {name,value} = event.target;
       setLoginData({...loginData,[name]:value})
      
    }

    const location = useLocation();
    const from = location.state?.from?.pathname || "/";

    
    const checkUser=(event:any)=>{
        var errData = validation();
        console.log(errors);
        if(errData)
       {
            axios.post("https://dummyjson.com/auth/login",loginData)
            .then((response)=>{
                console.log(response.data)
            }).catch((err)=>{
                alert(err.response.data.message)
            })
       }
    }
    return(
        <div>
            <label className="form-control">Username</label>
            <input name="username" className="form-control" type="text" value={loginData.username} onChange={handleChange}/>
            {errors?["username"]?<span>{errors["username"]}</span>:null:null}
            <label className="form-control">Password</label>
            <input name="password" className="form-control" value={loginData.password} type="password" onChange={handleChange}/>
            {errors?["password"]?<span>{errors["password"]}</span>:null:null} 
            {errors?["passwordLen"]?<span>{errors["passwordLen"]}</span>:null:null}
            <button className="btn btn-success" onClick={checkUser}>Login</button>
        </div>
    )
}
-----------------------------------
npm install axios
